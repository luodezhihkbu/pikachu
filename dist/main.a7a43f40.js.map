{"version":3,"sources":["style.js","main.js"],"names":["string","demo","document","querySelector","demo2","n","innerText","substr","innerHTML","time","run","length","window","clearInterval","id","scrollTop","scrollHeight","play","setInterval","pause","onclick","$","on","e","$button","currentTarget","addClass","siblings","removeClass"],"mappings":"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","file":"main.a7a43f40.js","sourceRoot":"../src","sourcesContent":["const string = `.skin * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.skin *::before, .skin *::after {\n  box-sizing: border-box;\n}\n.skin {\n  background: #ffe600;\n  min-height: 100vh;\n  position: relative;\n}\n\n/* 鼻子的下部分为三角形 */\n/* 用 border 来制作三角形：将 div 的宽高设为0，border 设为10px，底部的 border 去掉，左右两边的 border 设为透明 */\n.nose {\n  border: 10px solid black;\n  border-color: black transparent transparent;\n  border-bottom: none;\n  width: 0;\n  height: 0;\n  position: relative;\n  left: 50%;\n  top: 145px;\n  margin-left: -10px;\n  z-index: 10;\n}\n/* 鼠标浮到鼻子上，鼻子会晃动 */\n@keyframes wave {\n  0% {\n    transform: rotate(0deg);\n  }\n  33% {\n    transform: rotate(5deg);\n  }\n  66% {\n    transform: rotate(-5deg);\n  }\n  100% {\n    transform: rotate(0deg);\n  }\n}\n.nose:hover {\n  transform-origin: center bottom; /* 以底部的中点为基点晃动 */\n  animation: wave 300ms infinite linear;\n}\n/* 鼻子的上部分为圆弧 */\n/* 把 border-radius 的左下和右下设为0，可得到上圆弧 */\n.yuan {\n  position: absolute;\n  width: 20px;\n  height: 6px;\n  top: -16px;\n  left: -10px;\n  border-radius: 10px 10px 0 0;\n  background: black;\n}\n\n.eye {\n  border: 2px solid #000;\n  width: 64px;\n  height: 64px;\n  position: absolute;\n  left: 50%;\n  top: 100px;\n  margin-left: -32px;\n  background: #2e2e2e;\n  border-radius: 50%;\n}\n/* 用伪元素来做眼白部分，伪元素默认写上 content 和 display */\n.eye::before {\n  content: \"\";\n  display: block;\n  border: 3px solid #000;\n  width: 30px;\n  height: 30px;\n  background: #fff;\n  border-radius: 50%;\n  position: relative;\n  left: 4px;\n  top: 2px;\n}\n.eye.left {\n  transform: translateX(-100px);\n}\n.eye.right {\n  transform: translateX(100px);\n}\n\n/* 嘴分为上下两部分，上部分又分为左右两部分 */\n.mouth {\n  width: 200px;\n  height: 200px;\n  position: absolute;\n  left: 50%;\n  top: 170px;\n  margin-left: -100px;\n}\n/* 嘴上的两个部分分别用两个圆角矩形表示 */\n/* 左部分矩形的左边设为圆角，上边设为透明（出现的虚线用一个伪元素矩阵遮住），右边用一个伪元素矩形遮住，然后再顺时针旋转15度 */\n/* 右部分矩形的右边设为圆角，上边设为透明（出现的虚线用一个伪元素矩阵遮住），左边用一个伪元素矩形遮住，然后再逆时针旋转15度 */\n.mouth .up {\n  position: relative;\n  top: -20px;\n  z-index: 1;\n}\n.mouth .up .lip {\n  border: 3px solid black;\n  height: 30px;\n  width: 100px;\n  background: #ffe600;\n  border-top-color: transparent;\n  position: absolute;\n  left: 50%;\n  margin-left: -50px;\n}\n.mouth .up .lip.left {\n  border-radius: 0 0 0 50px;\n  transform: rotate(-15deg) translateX(-53px);\n}\n.mouth .up .lip.right {\n  border-radius: 0 0 50px 0;\n  transform: rotate(15deg) translateX(53px);\n}\n/* 右边用伪元素矩形遮住 */\n.mouth .up .lip::before {\n  content: \"\";\n  display: block;\n  width: 7px;\n  height: 30px;\n  position: absolute;\n  bottom: 0;\n  background: #ffe600;\n}\n.mouth .up .lip.left::before {\n  right: -6px;\n}\n.mouth .up .lip.right::before {\n  left: -6px;\n}\n/* 上边出现的虚线用伪元素矩阵遮住 */\n.mouth .up .lip::after {\n  content: \"\";\n  display: block;\n  width: 95px;\n  height: 3px;\n  position: absolute;\n  top: -5px;\n  background: #ffe600;\n}\n.mouth .up .lip.left::after {\n  left: 1px;\n}\n.mouth .up .lip.right::after {\n  right: 1px;\n}\n\n/* 嘴下的部分是两个圆角矩形，位于最底层，其中 yuan2 在 yuan1 的里面 */\n/* 用 overflow: hidden 遮住多出来的部分 */\n.mouth .down {\n  height: 180px;\n  position: absolute;\n  top: 5px;\n  width: 100%;\n  overflow: hidden;\n}\n.mouth .down .yuan1 {\n  border: 3px solid black;\n  width: 150px;\n  height: 1000px;\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  margin-left: -75px;\n  border-radius: 75px/300px;\n  background: #9b000a;\n  overflow: hidden;\n}\n.mouth .down .yuan1 .yuan2 {\n  width: 200px;\n  height: 300px;\n  background: #ff485f;\n  position: absolute;\n  bottom: -155px;\n  left: 50%;\n  margin-left: -100px;\n  border-radius: 100px;\n}\n\n.face {\n  position: absolute;\n  border: 3px solid black;\n  width: 88px;\n  height: 88px;\n  left: 50%;\n  top: 200px;\n  margin-left: -44px;\n  z-index: 3;\n}\n.face.left {\n  transform: translateX(-180px);\n  background: #ff0000;\n  border-radius: 50%;\n}\n.face.right {\n  transform: translateX(180px);\n  background: #ff0000;\n  border-radius: 50%;\n}\n`\nexport default string","// 动态展示的原理：把 css 样式转化成字符串，然后用 setInterval 把字符串一个字符一个字符的在页面展示出来\nimport string from './style.js'\n\nconst demo = document.querySelector('#demo')\nconst demo2 = document.querySelector('#demo2')\n\n// 在 demo 里展示出文本内容，同时，在 demo2 里同步加上样式\nlet n = 1\ndemo.innerText = string.substr(0, n)\ndemo2.innerHTML = string.substr(0, n)\n\n// 每隔一段时间，执行 setInterval 里面的函数，并记录每次执行完后返回的 id\n// 当 n 大于字符串长度时暂停\nlet time = 100\nconst run = () => {\n  n += 1\n  if (n > string.length) {\n    window.clearInterval(id)\n    return\n  }\n  demo.innerText = string.substr(0, n)\n  demo2.innerHTML = string.substr(0, n)\n  demo.scrollTop = demo.scrollHeight // 滚动条根据页面出现的内容自动往下滚\n}\nconst play = () => {\n  return setInterval(run, time) // setInterval 接受的第一个参数是函数，所以 run 后面不要加括号\n}\nconst pause = () => {\n  window.clearInterval(id)\n}\nlet id = play() // id 只能放在全局，因为 play 和 pause 都会用到 id\n\ndocument.querySelector('#btnPause').onclick = () => {\n  pause()\n}\ndocument.querySelector('#btnPlay').onclick = () => {\n  pause()\n  id = play()\n}\ndocument.querySelector('#btnSlow').onclick = () => {\n  pause()\n  time = 300\n  id = play()\n}\ndocument.querySelector('#btnNormal').onclick = () => {\n  pause()\n  time = 100\n  id = play()\n}\ndocument.querySelector('#btnFast').onclick = () => {\n  pause()\n  time = 0\n  id = play()\n}\n\n$('button').on('click', function(e){\n  let $button = $(e.currentTarget) // 当前选中的 button\n  // 给选中的 button 加上类名 active ，移除选中 button 的兄弟元素（即未选中的 button）的类名 active\n  $button.addClass('active')\n    .siblings('.active').removeClass('active')\n})\n"]}